{
	"info": {
		"_postman_id": "6608d3fc-e9f3-46f8-a049-7d6f4fdef8b5",
		"name": "Basic OpenSocioracy Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27760",
		"_collection_link": "https://ultrinet.postman.co/workspace/OpenSociocracy~91847678-48b8-4506-a363-e2ef05526962/collection/27760-6608d3fc-e9f3-46f8-a049-7d6f4fdef8b5?action=share&creator=27760&source=collection_link"
	},
	"item": [
		{
			"name": "Basic",
			"item": [
				{
					"name": "API Server up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The root of the API server is available\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.root).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUri}}",
							"host": [
								"{{apiUri}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The root of the API server is available\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(\"up\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUri}}/health",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Postgres Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The root of the API server is available\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUri}}/health/postgres",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"health",
								"postgres"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "API Auth - Request Signup code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Returned status is OK\", function () {",
									"    jsonData.status == \"OK\"",
									"});",
									"",
									"// Set variables for deviceId and preAuthSessionId so we can use them when submitting the code",
									"",
									"pm.environment.set(\"deviceId_1\", jsonData.deviceId);",
									"pm.environment.set(\"preAuthSessionId_1\", jsonData.preAuthSessionId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"randoEmail\", pm.variables.replaceIn('{{$randomExampleEmail}}'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{randoEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/auth/signinup/code",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"auth",
								"signinup",
								"code"
							]
						}
					},
					"response": []
				},
				{
					"name": "API Auth - Submit OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Returned status is OK\", function () {",
									"    jsonData.status == \"OK\"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"randoEmail\", pm.variables.replaceIn('{{$randomExampleEmail}}'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deviceId\": \"{{deviceId_1}}\",\n    \"preAuthSessionId\": \"{{preAuthSessionId_1}}\",\n    \"userInputCode\": \"903318\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/auth/signinup/code/consume",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"auth",
								"signinup",
								"code",
								"consume"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ACCOUNTS",
			"item": [
				{
					"name": "Get member accounts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"const accounts = jsonData.accounts;",
									"",
									"_.forEach(accounts, function(account) {",
									"  if(account.personal == false) {",
									"    pm.environment.set(\"currentAccount\", account.accountUid);",
									"  }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/accounts",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"HTTP Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Returned status is OK\", function () {",
									"    jsonData.status == \"OK\"",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My new account 2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/accounts",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"accounts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ORGANIZATIONS",
			"item": [
				{
					"name": "Get Account orgs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"const orgs = jsonData.orgs;",
									"",
									"_.forEach(orgs, function(org) {",
									"    pm.environment.set(\"orgUid\", org.orgUid);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUri}}/orgs/account/{{currentAccount}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"orgs",
								"account",
								"{{currentAccount}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an Org",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.environment.set(\"orgUid\", jsonData.orgUid);",
									"pm.environment.set(\"logbookUid\", jsonData.logbookUid);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My Org\",\n    \"note\": \"My fancy new Org\",\n    \"accountUid\": \"{{currentAccount}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/orgs",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"orgs"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LOGBOOK",
			"item": [
				{
					"name": "Get Org Logbooks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"const logbooks = jsonData.logbooks;",
									"",
									"_.forEach(logbooks, function(logbook) {",
									"    pm.environment.set(\"logbookUid\", logbook.logbookUid);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUri}}/logbooks/org/{{orgUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"logbooks",
								"org",
								"{{orgUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Logbook entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{randoEmail}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/logbooks/{{logbookUid}}/entries",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"logbooks",
								"{{logbookUid}}",
								"entries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Logbook note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"note\": \"This org event happened\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/logbook/{{logbookUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"logbook",
								"{{logbookUid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LOGBOOK NUGGETS",
			"item": [
				{
					"name": "Create a Logbook Nugget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"note\": \"This org event happened, and I have a nugget of info\",\n    \"nugget\": {\n        \"nuggetType\": \"proposal\",\n        \"pubAt\": \"2023-05-25\",\n        \"internalName\": \"Proposal to recover the parking lot.\",\n        \"publicTitle\": \"Prettier Parking\",\n        \"blocks\": [\n            {\n                \"blockType\": \"standardProposal\",\n                \"data\": {\n\n                }\n            },\n            {\n                \"blockType\": \"slideDeck\",\n                \"data\": {\n                    \n                }\n            },\n            {\n                \"blockType\": \"spreadsheet\",\n                \"data\": {\n                    \n                }\n            }\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/logbook/{{logbookUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"logbook",
								"{{logbookUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Logbook Entry Nugget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUri}}/nugget/{{nuggetUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"nugget",
								"{{nuggetUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Logbook Nugget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"note\": \"This org event happened, and I have a nugget of info\",\n    \"nugget\": {\n        \"nuggetType\": \"proposal\",\n        \"pubAt\": \"2023-05-25\",\n        \"internalName\": \"Proposal to recover the parking lot.\",\n        \"publicTitle\": \"Prettier Parking\",\n        \"blocks\": [\n            {\n                \"blockType\": \"standardProposal\",\n                \"data\": {\n\n                }\n            },\n            {\n                \"blockType\": \"slideDeck\",\n                \"data\": {\n                    \n                }\n            },\n            {\n                \"blockType\": \"spreadsheet\",\n                \"data\": {\n                    \n                }\n            }\n        ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/nugget/{{nuggetUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"nugget",
								"{{nuggetUid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NUGGET REACTIONS",
			"item": [
				{
					"name": "Get Reactions for a Nugget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUri}}/reactions/nugget/{{nuggetUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"reactions",
								"nugget",
								"{{nuggetUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create/Update Reaction to a Nugget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reaction\": \"consent\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/reactions/nugget/{{nuggetUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"reactions",
								"nugget",
								"{{nuggetUid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NUGGET COMMENTS",
			"item": [
				{
					"name": "Get Comments for a Nugget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUri}}/comments/nugget/{{nuggetUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"comments",
								"nugget",
								"{{nuggetUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Comment for a Nugget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comment\": \"Cool idea, what will it cost?\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/comment/nugget/{{nuggetUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"comment",
								"nugget",
								"{{nuggetUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Comment for a Nugget",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"comment\": \"Cool idea, thank you. Do we know what will it cost?\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/nugget/{{nuggetUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"nugget",
								"{{nuggetUid}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "REPLIES TO COMMENTS",
			"item": [
				{
					"name": "Get Replies for a Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUri}}/reply/comment/{{commentUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"reply",
								"comment",
								"{{commentUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Reply to a Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reply\": \"I know you are, but what am I?\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/reply/comment/{{commentUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"reply",
								"comment",
								"{{commentUid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Reply to a Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "rid",
								"value": "passwordless",
								"type": "text"
							},
							{
								"key": "st-auth-mode",
								"value": "cookie",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reply\": \"I second the proposal\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUri}}/nugget/{{nuggetUid}}",
							"host": [
								"{{apiUri}}"
							],
							"path": [
								"nugget",
								"{{nuggetUid}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}